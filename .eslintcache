[{"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/index.js":"1","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Dashboard.js":"2","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AdminDashboard.js":"3","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/services/firebase.js":"4","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Register.js":"5","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/FreelancerDashboard.js":"6","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/routers/AppRouter.js":"7","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Navbar.js":"8","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/UpdateProject.js":"9","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/SubmitProject.js":"10","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/CreateFreelancer.js":"11","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/ReviewFreelancer.js":"12","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AddProject.js":"13"},{"size":500,"mtime":1607715515143,"results":"14","hashOfConfig":"15"},{"size":2727,"mtime":1607729329829,"results":"16","hashOfConfig":"15"},{"size":5779,"mtime":1607810569618,"results":"17","hashOfConfig":"15"},{"size":534,"mtime":1607719643067,"results":"18","hashOfConfig":"15"},{"size":2976,"mtime":1607800888988,"results":"19","hashOfConfig":"15"},{"size":3451,"mtime":1607800117742,"results":"20","hashOfConfig":"15"},{"size":1827,"mtime":1607801657969,"results":"21","hashOfConfig":"15"},{"size":530,"mtime":1607797258317,"results":"22","hashOfConfig":"15"},{"size":4254,"mtime":1607797258317,"results":"23","hashOfConfig":"15"},{"size":2106,"mtime":1607799960739,"results":"24","hashOfConfig":"15"},{"size":5059,"mtime":1607799620303,"results":"25","hashOfConfig":"15"},{"size":1581,"mtime":1607802907451,"results":"26","hashOfConfig":"15"},{"size":3863,"mtime":1607724936591,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"vpc9ee",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/index.js",[],["57","58"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Dashboard.js",["59","60"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { firestore } from '../services/firebase';\n\n\nconst Dashboard = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const email = location.state.email\n    \n    const makeAdmin = () => {\n        firestore.collection('users').where(\"email\", \"==\", location.state.email).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('users').doc(doc.id).update({\n                    role: \"admin\"\n                })\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n        \n        firestore.collection('projects').where(\"admin\", \"==\", location.state.email).get()\n        .then((query) => {\n            if(query.empty) {\n                history.push({\n                    pathname: '/addProject',\n                    state: { email:  email }\n                });\n            } else {\n                history.push({\n                    pathname: '/adminDashboard',\n                    state: { email:  email }\n                });\n            }\n        })\n    }\n\n    const makeFreelancer = () => {\n        firestore.collection('users').where(\"email\", \"==\", location.state.email).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('users').doc(doc.id).update({\n                    role: \"freelancer\"\n                })\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        history.push({\n            pathname: '/addFreelancer',\n            state: { email:  email }\n        });\n        \n    }\n\n    return (\n        <>\n            <div className=\"projects\">\n            <div className=\"container\" style={{marginTop: \"10%\"}}>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                    <h1 className=\"display-4 text-center\">What you wanna do</h1>\n                    <br />\n                    <br />\n                    <hr />\n                    <div style={{display:\"flex\", justifyContent: \"center\"}}>\n                        <div className=\"btn btn-lg btn-info\" onClick={makeAdmin}>\n                            Create a Project\n                        </div>\n                        &nbsp;&nbsp;&nbsp;\n                        <div className=\"btn btn-lg btn-success\" onClick={makeFreelancer}>\n                            Earn Money\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Dashboard;","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AdminDashboard.js",["61"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/services/firebase.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Register.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/FreelancerDashboard.js",["62"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/routers/AppRouter.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Navbar.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/UpdateProject.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/SubmitProject.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/CreateFreelancer.js",["63"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { firestore } from '../services/firebase';\n\nconst CreateFreelancer = () => {\n    const history = useHistory()\n    const location = useLocation()\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\")\n    const [upiId, setUpiId] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [cardName, setCardName] = useState(\"\")\n\n    const handleSubmit = () => {\n        firestore.collection('freelancers').add({\n            name: name,\n            phoneNumber: phoneNumber,\n            email: email,\n            upiId: upiId,\n            cardNumber: cardNumber,\n            cardName: cardName\n        })\n\n        history.push({\n            pathname: '/freelancerDashboard',\n            state: { email:  location.state.email }\n        });\n    }\n\n\n    return (\n        <>\n            <div className=\"register\">\n                <div className=\"container\" style={{marginTop: \"10%\"}}>\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Add Details</h1>\n                            <p className=\"lead text-center\">Add bank and required details</p>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Name\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={(e) => {setName(e.target.value)}}\n                                />\n                                \n                                </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Phone Number\"\n                                    name=\"phone_number\"\n                                    value={phoneNumber}\n                                    onChange={(e) => {setPhoneNumber(e.target.value)}}\n                                />\n                                \n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Email\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={(e) => {setEmail(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"UPI Id\"\n                                    name=\"upi_id\"\n                                    value={upiId}\n                                    onChange={(e) => {setUpiId(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Card Number\"\n                                    name=\"card number\"\n                                    value={cardNumber}\n                                    onChange={(e) => {setCardNumber(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Name on Card\"\n                                    name=\"card name\"\n                                    value={cardName}\n                                    onChange={(e) => {setCardName(e.target.value)}}\n                                />\n                                </div>\n                                \n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" onClick={handleSubmit}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default CreateFreelancer;","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/ReviewFreelancer.js",["64"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AddProject.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":19,"column":8,"nodeType":"76","endLine":19,"endColumn":10,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":25,"column":8,"nodeType":"76","endLine":25,"endColumn":10,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"73","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":21,"column":8,"nodeType":"76","endLine":21,"endColumn":10,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.email'. Either include it or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["85"],"React Hook useEffect has a missing dependency: 'location.state.freelancer'. Either include it or remove the dependency array.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [location.state.email]",{"range":"93","text":"94"},"Update the dependencies array to be: [email]",{"range":"95","text":"96"},"Update the dependencies array to be: [location.state.freelancer]",{"range":"97","text":"98"},[655,657],"[location.state.email]",[952,954],"[email]",[647,649],"[location.state.freelancer]"]