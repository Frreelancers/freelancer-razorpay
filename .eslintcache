[{"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/index.js":"1","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Dashboard.js":"2","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AdminDashboard.js":"3","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/services/firebase.js":"4","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Register.js":"5","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/FreelancerDashboard.js":"6","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/routers/AppRouter.js":"7","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Navbar.js":"8","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/UpdateProject.js":"9","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/SubmitProject.js":"10","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/CreateFreelancer.js":"11","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/ReviewFreelancer.js":"12","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AddProject.js":"13","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Login.js":"14","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Landing.js":"15","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/reportWebVitals.js":"16"},{"size":500,"mtime":1607715515143,"results":"17","hashOfConfig":"18"},{"size":2727,"mtime":1607729329829,"results":"19","hashOfConfig":"18"},{"size":5973,"mtime":1607814910021,"results":"20","hashOfConfig":"18"},{"size":534,"mtime":1607719643067,"results":"21","hashOfConfig":"18"},{"size":2976,"mtime":1607800888988,"results":"22","hashOfConfig":"18"},{"size":3451,"mtime":1607800117742,"results":"23","hashOfConfig":"18"},{"size":1827,"mtime":1607801657969,"results":"24","hashOfConfig":"18"},{"size":920,"mtime":1607811998738,"results":"25","hashOfConfig":"18"},{"size":4254,"mtime":1607812934467,"results":"26","hashOfConfig":"18"},{"size":2106,"mtime":1607799960739,"results":"27","hashOfConfig":"18"},{"size":5059,"mtime":1607799620303,"results":"28","hashOfConfig":"18"},{"size":1581,"mtime":1607802907451,"results":"29","hashOfConfig":"18"},{"size":3863,"mtime":1607724936591,"results":"30","hashOfConfig":"18"},{"size":2683,"mtime":1607727813629,"results":"31","hashOfConfig":"18"},{"size":1157,"mtime":1607724816899,"results":"32","hashOfConfig":"18"},{"size":362,"mtime":1607715515143,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"vpc9ee",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/index.js",[],["74","75"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Dashboard.js",["76","77"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { firestore } from '../services/firebase';\n\n\nconst Dashboard = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const email = location.state.email\n    \n    const makeAdmin = () => {\n        firestore.collection('users').where(\"email\", \"==\", location.state.email).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('users').doc(doc.id).update({\n                    role: \"admin\"\n                })\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n        \n        firestore.collection('projects').where(\"admin\", \"==\", location.state.email).get()\n        .then((query) => {\n            if(query.empty) {\n                history.push({\n                    pathname: '/addProject',\n                    state: { email:  email }\n                });\n            } else {\n                history.push({\n                    pathname: '/adminDashboard',\n                    state: { email:  email }\n                });\n            }\n        })\n    }\n\n    const makeFreelancer = () => {\n        firestore.collection('users').where(\"email\", \"==\", location.state.email).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('users').doc(doc.id).update({\n                    role: \"freelancer\"\n                })\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        history.push({\n            pathname: '/addFreelancer',\n            state: { email:  email }\n        });\n        \n    }\n\n    return (\n        <>\n            <div className=\"projects\">\n            <div className=\"container\" style={{marginTop: \"10%\"}}>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                    <h1 className=\"display-4 text-center\">What you wanna do</h1>\n                    <br />\n                    <br />\n                    <hr />\n                    <div style={{display:\"flex\", justifyContent: \"center\"}}>\n                        <div className=\"btn btn-lg btn-info\" onClick={makeAdmin}>\n                            Create a Project\n                        </div>\n                        &nbsp;&nbsp;&nbsp;\n                        <div className=\"btn btn-lg btn-success\" onClick={makeFreelancer}>\n                            Earn Money\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Dashboard;",["78","79"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AdminDashboard.js",["80","81"],"import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { firestore } from '../services/firebase';\n\nconst AdminDashboard = () => {\n    let axios = require('axios')\n    const [projects, setProjects] = useState([]);\n    const [loading, setLoading] = useState(false)\n    const location = useLocation();\n    const history = useHistory();\n\n    useEffect(() => {\n        firestore.collection('projects').where(\"admin\", \"==\", location.state.email).get()\n            .then((query) => {\n                query.forEach((doc) => {\n                    setProjects(projects => projects.concat(doc.data()))\n                })\n            })\n        \n    }, [])\n\n    const updateProject = (project) => {\n        history.push({\n            pathname: '/updateProject',\n            state: { email:  location.state.email,project:project}\n        })\n    }\n\n    const deleteProject = (project, index) => {\n        setProjects(projects => projects.splice(index, 1))\n        firestore.collection(\"projects\").where(\"projectName\", \"==\",project.projectName).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('projects').doc(doc.id).delete().then(function() {\n                    setLoading(true)\n                })\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        history.push({\n            pathname: '/adminDashboard',\n            state: { email:  location.state.email}\n        })\n    }\n\n    const reviewProject = (freelancer, githubLink) => {\n        history.push({\n            pathname: '/reviewFreelancer',\n            state: {\n                admin: location.state.email,\n                freelancer: freelancer,\n                githubLink: githubLink\n             }\n        })\n    }\n\n    const payout = (project) => {\n        firestore.collection('freelancers').where(\"email\", \"==\", project.freelancer).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                const freelancer = doc.data()\n                axios.post(\"https://freelancer-razorpay-api.herokuapp.com/razorpay\", {\n                    project: project,\n                    freelancer: freelancer\n                })\n                .then((res) => {\n                    console.log(res)\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n            })\n        })\n        \n        setInterval(() => {\n            alert(\"Payment Processed!!\")\n        }, 5000)\n        \n    }\n\n    const sendMail = (freelancerEmail) => {\n        window.location.href = `mailto:${freelancerEmail}`\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"btn btn-lg btn-info\" onClick={() => {\n                    history.push({\n                        pathname: '/addProject',\n                        state: { email:  location.state.email }\n                    })\n                }}>\n                    Create Project\n                </div>\n                <br />\n                <br />\n                {projects.map((project, index) => (\n                    <>  \n                        <div className=\"card card-body bg-light mb-3\" key={index}>\n                            <div className=\"row\">\n                                <div className=\"col-2\">\n                                    <button className=\"btn btn-small btn-danger\" disabled={project.status === \"submitted\"} onClick={() => {reviewProject(project.freelancer, project.githubLink)}}>\n                                            Review\n                                    </button>\n                                    <button className=\"btn btn-small btn-primary\" disabled={project.status === \"submitted\"} style={{marginTop: \"10px\"}} onClick={() => {payout(project)}}>\n                                            Payout\n                                    </button>\n                                    <button className=\"btn btn-small btn-primary\" disabled={project.status === \"submitted\"} style={{marginTop: \"10px\"}} onClick={() => {sendMail(project.freelancer)}}>\n                                            Contact\n                                    </button>\n                                </div>\n                                <div className=\"col-lg-6 col-md-4 col-8\">\n                                    <h3>{project.projectName}</h3>\n                                    <p>{project.projectDescription}</p>\n                                    <br>\n                                    </br>\n                                    {project.freelancer && <h4>Freelancer: {project.freelancer}</h4>}\n                                    \n                                </div>\n                                \n                            \n                                <div className=\"col-md-4 d-none d-lg-block\">\n                                    <ul className=\"list-group\">\n                                        <div>\n                                            <li className=\"list-group-item update\" onClick={() => {updateProject(project)}}>\n                                                <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                            </li>\n                                        </div>\n                                        <li\n                                        className=\"list-group-item delete\" onClick={() => {deleteProject(project, index)}}              \n                                        >\n                                            <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ))}\n            </div>\n        </>\n    )\n}\n\nexport default AdminDashboard;","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/services/firebase.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Register.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/FreelancerDashboard.js",["82"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { firestore } from '../services/firebase';\n\nconst FreelancerDashboard = () => {\n    const [projects, setProjects] = useState([]);\n    const location = useLocation();\n    const email = location.state.email;\n    const history = useHistory();\n\n    useEffect(() => {\n        firestore.collection('projects').where(\"status\", \"==\", \"submitted\").get()\n            .then((query) => {\n                query.forEach((doc) => {\n                    setProjects(projects => projects.concat({...doc.data(), id: doc.id}))\n                })\n            })\n        \n        firestore.collection('projects').where(\"freelancer\", \"==\", email).get()\n            .then((query) => {\n                query.forEach((doc) => {\n                    setProjects(projects => projects.concat({...doc.data(), id: doc.id}))\n                })\n            })\n    }, [])\n\n    const takeup = (projectName) => {\n        firestore.collection('projects').where(\"projectName\", \"==\", projectName).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('projects').doc(doc.id).update({\n                    freelancer: email,\n                    status: \"taken\"\n                })\n            })\n        })\n        \n    }\n\n    const submission = (projectName) => {\n        history.push({\n            pathname: '/submitProject',\n            state: {\n                email: email,\n                projectName: projectName\n            }\n        })\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <br />\n                <br />\n                {projects.map((project, index) => (\n                    <>\n                        <div className=\"card card-body bg-light mb-3\" key={index}>\n                            <div className=\"row\">\n                                <div className=\"col-2\">\n                                </div>\n\n                                <div className=\"col-lg-6 col-md-4 col-8\">\n                                    <h3>{project.projectName}</h3>\n                                    <p>{project.projectDescription}</p>\n                                </div>\n                                \n                            \n                                <div className=\"col-md-4 d-none d-lg-block\">\n                                    <ul className=\"list-group\">\n                                        <div>\n                                            <li className=\"list-group-item update\" onClick={() => {takeup(project.projectName)}}>\n                                                <i className=\"fa fa-edit pr-1\"> Take-Up Work</i>\n                                            </li>\n                                        </div>\n                                        <li\n                                        className=\"list-group-item delete\"  onClick={() => {submission(project.projectName)}}            \n                                        >\n                                            <i className=\"fa fa-minus-circle pr-1\"> Submit</i>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ))}\n            </div>\n        </>\n    )\n}\n\nexport default FreelancerDashboard;","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/routers/AppRouter.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Navbar.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/UpdateProject.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/SubmitProject.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/CreateFreelancer.js",["83"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { firestore } from '../services/firebase';\n\nconst CreateFreelancer = () => {\n    const history = useHistory()\n    const location = useLocation()\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\")\n    const [upiId, setUpiId] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [cardName, setCardName] = useState(\"\")\n\n    const handleSubmit = () => {\n        firestore.collection('freelancers').add({\n            name: name,\n            phoneNumber: phoneNumber,\n            email: email,\n            upiId: upiId,\n            cardNumber: cardNumber,\n            cardName: cardName\n        })\n\n        history.push({\n            pathname: '/freelancerDashboard',\n            state: { email:  location.state.email }\n        });\n    }\n\n\n    return (\n        <>\n            <div className=\"register\">\n                <div className=\"container\" style={{marginTop: \"10%\"}}>\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Add Details</h1>\n                            <p className=\"lead text-center\">Add bank and required details</p>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Name\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={(e) => {setName(e.target.value)}}\n                                />\n                                \n                                </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Phone Number\"\n                                    name=\"phone_number\"\n                                    value={phoneNumber}\n                                    onChange={(e) => {setPhoneNumber(e.target.value)}}\n                                />\n                                \n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Email\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={(e) => {setEmail(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"UPI Id\"\n                                    name=\"upi_id\"\n                                    value={upiId}\n                                    onChange={(e) => {setUpiId(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Card Number\"\n                                    name=\"card number\"\n                                    value={cardNumber}\n                                    onChange={(e) => {setCardNumber(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Name on Card\"\n                                    name=\"card name\"\n                                    value={cardName}\n                                    onChange={(e) => {setCardName(e.target.value)}}\n                                />\n                                </div>\n                                \n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" onClick={handleSubmit}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default CreateFreelancer;",["84","85"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/ReviewFreelancer.js",["86"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AddProject.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Login.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Landing.js",[],["87","88"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/reportWebVitals.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"89","replacedBy":"98"},{"ruleId":"91","replacedBy":"99"},{"ruleId":"93","severity":1,"message":"100","line":8,"column":12,"nodeType":"95","messageId":"96","endLine":8,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":20,"column":8,"nodeType":"103","endLine":20,"endColumn":10,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":25,"column":8,"nodeType":"103","endLine":25,"endColumn":10,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"97","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"89","replacedBy":"107"},{"ruleId":"91","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":21,"column":8,"nodeType":"103","endLine":21,"endColumn":10,"suggestions":"110"},{"ruleId":"89","replacedBy":"111"},{"ruleId":"91","replacedBy":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["113"],["114"],"'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.email'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["116"],["113"],["114"],"React Hook useEffect has a missing dependency: 'location.state.freelancer'. Either include it or remove the dependency array.",["117"],["113"],["114"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [location.state.email]",{"range":"124","text":"125"},"Update the dependencies array to be: [email]",{"range":"126","text":"127"},"Update the dependencies array to be: [location.state.freelancer]",{"range":"128","text":"129"},[705,707],"[location.state.email]",[952,954],"[email]",[647,649],"[location.state.freelancer]"]