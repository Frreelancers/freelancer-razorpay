[{"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/index.js":"1","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Dashboard.js":"2","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AdminDashboard.js":"3","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/services/firebase.js":"4","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Register.js":"5","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/FreelancerDashboard.js":"6","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/routers/AppRouter.js":"7","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Navbar.js":"8","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/UpdateProject.js":"9","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/SubmitProject.js":"10","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/CreateFreelancer.js":"11","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/ReviewFreelancer.js":"12","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AddProject.js":"13","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Login.js":"14","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Landing.js":"15","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/reportWebVitals.js":"16"},{"size":500,"mtime":1607715515143,"results":"17","hashOfConfig":"18"},{"size":2727,"mtime":1607729329829,"results":"19","hashOfConfig":"18"},{"size":5871,"mtime":1607812802518,"results":"20","hashOfConfig":"18"},{"size":534,"mtime":1607719643067,"results":"21","hashOfConfig":"18"},{"size":2976,"mtime":1607800888988,"results":"22","hashOfConfig":"18"},{"size":3451,"mtime":1607800117742,"results":"23","hashOfConfig":"18"},{"size":1827,"mtime":1607801657969,"results":"24","hashOfConfig":"18"},{"size":920,"mtime":1607811998738,"results":"25","hashOfConfig":"18"},{"size":4254,"mtime":1607812934467,"results":"26","hashOfConfig":"18"},{"size":2106,"mtime":1607799960739,"results":"27","hashOfConfig":"18"},{"size":5059,"mtime":1607799620303,"results":"28","hashOfConfig":"18"},{"size":1581,"mtime":1607802907451,"results":"29","hashOfConfig":"18"},{"size":3863,"mtime":1607724936591,"results":"30","hashOfConfig":"18"},{"size":2683,"mtime":1607727813629,"results":"31","hashOfConfig":"18"},{"size":1157,"mtime":1607724816899,"results":"32","hashOfConfig":"18"},{"size":362,"mtime":1607715515143,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"vpc9ee",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/index.js",[],["71","72"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Dashboard.js",["73","74"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { firestore } from '../services/firebase';\n\n\nconst Dashboard = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const email = location.state.email\n    \n    const makeAdmin = () => {\n        firestore.collection('users').where(\"email\", \"==\", location.state.email).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('users').doc(doc.id).update({\n                    role: \"admin\"\n                })\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n        \n        firestore.collection('projects').where(\"admin\", \"==\", location.state.email).get()\n        .then((query) => {\n            if(query.empty) {\n                history.push({\n                    pathname: '/addProject',\n                    state: { email:  email }\n                });\n            } else {\n                history.push({\n                    pathname: '/adminDashboard',\n                    state: { email:  email }\n                });\n            }\n        })\n    }\n\n    const makeFreelancer = () => {\n        firestore.collection('users').where(\"email\", \"==\", location.state.email).get()\n        .then((query) => {\n            query.forEach((doc) => {\n                firestore.collection('users').doc(doc.id).update({\n                    role: \"freelancer\"\n                })\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n\n        history.push({\n            pathname: '/addFreelancer',\n            state: { email:  email }\n        });\n        \n    }\n\n    return (\n        <>\n            <div className=\"projects\">\n            <div className=\"container\" style={{marginTop: \"10%\"}}>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                    <h1 className=\"display-4 text-center\">What you wanna do</h1>\n                    <br />\n                    <br />\n                    <hr />\n                    <div style={{display:\"flex\", justifyContent: \"center\"}}>\n                        <div className=\"btn btn-lg btn-info\" onClick={makeAdmin}>\n                            Create a Project\n                        </div>\n                        &nbsp;&nbsp;&nbsp;\n                        <div className=\"btn btn-lg btn-success\" onClick={makeFreelancer}>\n                            Earn Money\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Dashboard;",["75","76"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AdminDashboard.js",["77","78"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/services/firebase.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Register.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/FreelancerDashboard.js",["79"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/routers/AppRouter.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Navbar.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/UpdateProject.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/SubmitProject.js",[],["80","81"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/CreateFreelancer.js",["82"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { firestore } from '../services/firebase';\n\nconst CreateFreelancer = () => {\n    const history = useHistory()\n    const location = useLocation()\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [email, setEmail] = useState(\"\")\n    const [upiId, setUpiId] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [cardName, setCardName] = useState(\"\")\n\n    const handleSubmit = () => {\n        firestore.collection('freelancers').add({\n            name: name,\n            phoneNumber: phoneNumber,\n            email: email,\n            upiId: upiId,\n            cardNumber: cardNumber,\n            cardName: cardName\n        })\n\n        history.push({\n            pathname: '/freelancerDashboard',\n            state: { email:  location.state.email }\n        });\n    }\n\n\n    return (\n        <>\n            <div className=\"register\">\n                <div className=\"container\" style={{marginTop: \"10%\"}}>\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Add Details</h1>\n                            <p className=\"lead text-center\">Add bank and required details</p>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Name\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={(e) => {setName(e.target.value)}}\n                                />\n                                \n                                </div>\n                            <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Phone Number\"\n                                    name=\"phone_number\"\n                                    value={phoneNumber}\n                                    onChange={(e) => {setPhoneNumber(e.target.value)}}\n                                />\n                                \n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Email\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={(e) => {setEmail(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"UPI Id\"\n                                    name=\"upi_id\"\n                                    value={upiId}\n                                    onChange={(e) => {setUpiId(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Card Number\"\n                                    name=\"card number\"\n                                    value={cardNumber}\n                                    onChange={(e) => {setCardNumber(e.target.value)}}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Name on Card\"\n                                    name=\"card name\"\n                                    value={cardName}\n                                    onChange={(e) => {setCardName(e.target.value)}}\n                                />\n                                </div>\n                                \n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" onClick={handleSubmit}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default CreateFreelancer;","/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/ReviewFreelancer.js",["83"],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/AddProject.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Login.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/components/Landing.js",[],"/home/pranav1698/Desktop/Hackathons/freelancer-razorpay/src/reportWebVitals.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"84","replacedBy":"93"},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","severity":1,"message":"95","line":8,"column":12,"nodeType":"90","messageId":"91","endLine":8,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":20,"column":8,"nodeType":"98","endLine":20,"endColumn":10,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":25,"column":8,"nodeType":"98","endLine":25,"endColumn":10,"suggestions":"101"},{"ruleId":"84","replacedBy":"102"},{"ruleId":"86","replacedBy":"103"},{"ruleId":"88","severity":1,"message":"92","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"104","line":21,"column":8,"nodeType":"98","endLine":21,"endColumn":10,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["106"],["107"],"'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.email'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["109"],["106"],["107"],"React Hook useEffect has a missing dependency: 'location.state.freelancer'. Either include it or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [location.state.email]",{"range":"117","text":"118"},"Update the dependencies array to be: [email]",{"range":"119","text":"120"},"Update the dependencies array to be: [location.state.freelancer]",{"range":"121","text":"122"},[705,707],"[location.state.email]",[952,954],"[email]",[647,649],"[location.state.freelancer]"]